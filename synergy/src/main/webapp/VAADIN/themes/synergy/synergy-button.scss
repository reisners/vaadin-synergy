/**
 * Outputs the selectors and properties for synergy view items rendered as buttons.
 *
 * @param {string} $primary-stylename (v-button) - the primary style name for the selectors
 * @param {bool} $include-additional-styles - should the mixin output all the different style variations of the component
 *
 * @group button
 */
@mixin synergy-button ($primary-stylename: synergy-button, $background-color: $v-background-color, $hover-color: null) {
  .#{$primary-stylename} {
    @include synergy-button-style($background-color: $background-color, $hover-color: $hover-color, $gradient: null, $bevel: null, $shadow: null);
  }
}

/**
 * Outputs the styles for a button variant.
 *
 * @param {size} $unit-size ($v-unit-size) - The sizing of the button, which corresponds its height
 * @param {size | list} $padding (null) - The padding of the button. Computed from other parameters by default.
 * @param {color} $font-color (null) - The font color of the button. Computed from the $background-color by default.
 * @param {number} $font-weight ($v-font-weight + 100) - The font weight of the button
 * @param {size} $font-size (null) - The font size of the button. Inherited from the parent by default.
 * @param {string} $cursor (null) - The mouse cursor of the button
 * @param {color} $background-color ($v-background-color) - The background color of the button
 * @param {color} $hover-color (null) - The color of the button when hovering
 * @param {list} $border ($v-border) - The border of the button
 * @param {size} $border-radius ($v-border-radius) - The border-radius of the button
 * @param {list} $gradient ($v-gradient) - Valo specific gradient value. See the documentation for $v-gradient.
 * @param {list} $bevel ($v-bevel) - Box-shadow value according to $v-bevel documentation
 * @param {list} $shadow ($v-shadow) - Box-shadow value according to $v-shadow documentation
 *
 * @group button
 */
@mixin synergy-button-style (
  $unit-size        : $v-unit-size,
  $padding          : null,

  $font-color       : null,
  $font-weight      : $v-font-weight + 100,
  $font-size        : null, // Inherited by default
  $cursor           : null,

  $background-color : $v-background-color,
  $hover-color      : null,
  $border           : none,
  $border-radius    : 0,

  $gradient         : $v-gradient,
  $bevel            : $v-bevel,
  $shadow           : $v-shadow
) {

&:after {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border-radius: inherit;
}

position: relative;
text-align: center;
white-space: nowrap;
outline: none;
// @include valo-tappable;

  border-radius: $border-radius;
  border: $border;
  @include box-shadow(none);

  @include valo-button-vertical-centering;

    @if $unit-size {
      height: $unit-size;
      @if type-of($padding) == number or type-of($padding) == list {
        padding: $padding;
      } @else {
        padding: 0 round($unit-size/2.4) + round($border-radius/3);
      }
    }

    $_font-color: $font-color or valo-font-color($background-color, 0.9);
    color: $_font-color;
    font-weight: $font-weight;
    font-size: $font-size;
    cursor: $cursor;

    @if type-of($background-color) == color {
      // @include valo-border-with-gradient($border: $border, $color: darkest-color($background-color, $v-background-color), $gradient: $gradient);
      @include valo-gradient($background-color, $gradient);
      @include box-shadow(valo-bevel-and-shadow($bevel: $bevel, $shadow: $shadow, $background-color: $background-color, $gradient: $gradient));
    }

    @if $bevel and type-of($_font-color) == color and type-of($background-color) == color {
      text-shadow: valo-text-shadow($_font-color, $background-color);
    }

    @if $bevel == none and $shadow == none {
      @include box-shadow(none);
    }

	@if type-of($hover-color) == color {
	  &:hover:after {
	    @include synergy-button-hover-style($hover-color);
	  }
	}
  }


/**
 * Outputs the hover state styles for a button. The styles are by default targeted
 * for a pseudo element which is shown on top of the normal state button.
 *
 * @param {color} $background-color ($v-background-color) - The background color of the normal state button
 */
@mixin synergy-button-hover-style ($background-color: $v-background-color) {
  $bg: darken($background-color, 25%);
  @if is-dark-color($background-color) {
    $bg: lighten($background-color, 15%);
  }
  background-color: rgba($bg, .1);
}
